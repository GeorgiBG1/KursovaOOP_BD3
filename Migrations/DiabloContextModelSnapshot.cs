// <auto-generated />
using System;
using KursovaNet5BD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KursovaNet5BD.Migrations
{
    [DbContext(typeof(DiabloContext))]
    partial class DiabloContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KursovaNet5BD.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StatisticId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatisticId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GameTypeId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.GameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BonusStatsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BonusStatsId");

                    b.ToTable("GameTypes");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.GameTypeForbiddenItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "GameTypeId");

                    b.HasIndex("GameTypeId");

                    b.ToTable("GameTypeForbiddenItems");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MinLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("StatisticId");

                    b.HasIndex("UserId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<int>("Mind")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.UserGameItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserGameId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "UserGameId");

                    b.HasIndex("UserGameId");

                    b.ToTable("UserGameItems");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.UsersGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((1000))");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersGames");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Character", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.Statistic", "Statistic")
                        .WithMany("Characters")
                        .HasForeignKey("StatisticId")
                        .HasConstraintName("FK_Characters_Statistics");

                    b.Navigation("Statistic");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Game", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.GameType", "GameType")
                        .WithMany("Games")
                        .HasForeignKey("GameTypeId")
                        .HasConstraintName("FK_Games_GameTypes")
                        .IsRequired();

                    b.Navigation("GameType");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.GameType", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.Statistic", "BonusStats")
                        .WithMany("GameTypes")
                        .HasForeignKey("BonusStatsId")
                        .HasConstraintName("FK_GameTypes_Statistics");

                    b.Navigation("BonusStats");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.GameTypeForbiddenItem", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.GameType", "GameType")
                        .WithMany("GameTypeForbiddenItems")
                        .HasForeignKey("GameTypeId")
                        .HasConstraintName("FK_GameTypeForbiddenItems_GameTypes")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.Item", "Item")
                        .WithMany("GameTypeForbiddenItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_GameTypeForbiddenItems_Items")
                        .IsRequired();

                    b.Navigation("GameType");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Item", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId")
                        .HasConstraintName("FK_Items_ItemTypes")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.Statistic", "Statistic")
                        .WithMany("Items")
                        .HasForeignKey("StatisticId")
                        .HasConstraintName("FK_Items_Statistics")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.User", null)
                        .WithMany("Items")
                        .HasForeignKey("UserId");

                    b.Navigation("ItemType");

                    b.Navigation("Statistic");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.User", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.Item", "IdNavigation")
                        .WithOne("User")
                        .HasForeignKey("KursovaNet5BD.Models.User", "Id")
                        .HasConstraintName("FK_UsersItems")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.UserGameItem", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.Item", "Item")
                        .WithMany("UserGameItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_UserGameItems_Items")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.UsersGame", "UserGame")
                        .WithMany("UserGameItems")
                        .HasForeignKey("UserGameId")
                        .HasConstraintName("FK_UserGameItems_UsersGames")
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("UserGame");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.UsersGame", b =>
                {
                    b.HasOne("KursovaNet5BD.Models.Character", "Character")
                        .WithMany("UsersGames")
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("FK_UsersGames_Characters")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.Game", "Game")
                        .WithMany("UsersGames")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_UsersGames_Games")
                        .IsRequired();

                    b.HasOne("KursovaNet5BD.Models.User", "User")
                        .WithMany("UsersGames")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsersGames_Users1")
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Character", b =>
                {
                    b.Navigation("UsersGames");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Game", b =>
                {
                    b.Navigation("UsersGames");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.GameType", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("GameTypeForbiddenItems");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Item", b =>
                {
                    b.Navigation("GameTypeForbiddenItems");

                    b.Navigation("User");

                    b.Navigation("UserGameItems");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.Statistic", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("GameTypes");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.User", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("UsersGames");
                });

            modelBuilder.Entity("KursovaNet5BD.Models.UsersGame", b =>
                {
                    b.Navigation("UserGameItems");
                });
#pragma warning restore 612, 618
        }
    }
}
